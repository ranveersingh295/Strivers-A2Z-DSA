//OPTIMAL APPROACH
Time Complexity: O(N), N = size of the array.
Reason: We have used 2 loops and using those loops, we are basically traversing the array once.
Space Complexity: O(1) as we are not using any extra space to solve this problem.


class Solution {
    void pushZerosToEnd(int[] arr, int n) {
        // code here
        int j = -1;
        for(int i=0;i<n;i++){
            if(arr[i] == 0){
                j=i;
                break;
            }
        }
        if (j == -1) return;
        for(int i=j+1;i<n;i++){
            if(arr[i] != 0){
                int tmp = arr[i];
                arr[i] = arr[j];
                arr[j] = tmp;
                j++;
            }
        }
    
}
}
