Kadaneâ€™s Algorithm 
Time Complexity: O(N), where N = size of the array.
Reason: We are using a single loop running N times.
Space Complexity: O(1) as we are not using any extra space.

class Solution{
    // arr: input array
    // n: size of array
    //Function to find the sum of contiguous subarray with maximum sum.
    long maxSubarraySum(int arr[], int n){
        
        // Your code here
        long sum =0;
        long maxi = Long.MIN_VALUE;
        for(int i=0;i<n;i++){
            sum += arr[i];
            
            if(sum>maxi){
                maxi = sum;
            }
            
            if(sum<0){
                sum = 0;
            }
        }
        return maxi;
        
    }
    
}
